#############
# 输出到控制台
#############

# log4j.rootLogger日志输出类别和级别：只输出不低于该级别的日志信息DEBUG < INFO < WARN < ERROR < FATAL
# WARN：日志级别     CONSOLE：输出位置自己定义的一个名字       logfile：输出位置自己定义的一个名字
log4j.rootLogger=WARN,DATABASE,CONSOLE
# 配置CONSOLE输出到控制台
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
# 配置CONSOLE设置为自定义布局模式
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
# 配置CONSOLE日志的输出格式  [frame] 2019-08-22 22:52:12,000  %r耗费毫秒数 %p日志的优先级 %t线程名 %C所属类名通常为全类名 %L代码中的行号 %x线程相关联的NDC %m日志 %n换行
log4j.appender.CONSOLE.layout.ConversionPattern=[frame] %d{yyyy-MM-dd HH:mm:ss,SSS} - %-4r %-5p [%t] %C:%L %x - %m%n

#直接使用log4j包中的文件
log4j.appender.DATABASE=org.apache.log4j.jdbc.JDBCAppender
# 配置DATABASE设置为自定义布局模式
log4j.appender.DATABASE.layout=org.apache.log4j.PatternLayout
#与数据库建立连接（java1是数据库名）
log4j.appender.DATABASE.URL=jdbc:mysql://localhost:3306/classdemo?serverTimezone=UTC
log4j.appender.DATABASE.driver=com.mysql.cj.jdbc.Driver
log4j.appender.DATABASE.user=root
log4j.appender.DATABASE.password=root
#指定要插入数据库的格式，具体参数的格式看一开始给出的文档（自定义属性用'%X{自定义}'接收）
log4j.appender.DATABASE.sql=INSERT INTO log (logModule, logAction, logRemark, peopleId,logTime) VALUES ('%X{logModule}','%X{logAction}','%X{logRemark}',%X{adminId},sysdate())
